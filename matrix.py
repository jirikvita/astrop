#!/usr/bin/python

import numpy as np

# Petr Baron
# according to https://arxiv.org/pdf/2008.06486.pdf

matrix = np.array([[0.244  , 0.127  , 0.038  , 0.008  , 0.001  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0. , 0.  , 0. ],
                   [0.237  , 0.310  , 0.165  , 0.048  , 0.008  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.051  , 0.260  , 0.368  , 0.204  , 0.053  , 0.006  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.001  , 0.044  , 0.260  , 0.412  , 0.230  , 0.047  , 0.004  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.033  , 0.238  , 0.439  , 0.234  , 0.039  , 0.002  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.   , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.021  , 0.222  , 0.468  , 0.235  , 0.030  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.016  , 0.219  , 0.497  , 0.228  , 0.021  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.012  , 0.212  , 0.529  , 0.220  , 0.013  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.008  , 0.205  , 0.564  , 0.210  , 0.008  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.005  , 0.191  , 0.600  , 0.198  , 0.004  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.003  , 0.174  , 0.637  , 0.187  , 0.002  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.001  , 0.157  , 0.669  , 0.178  , 0.001  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.139  , 0.694  , 0.169  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.126  , 0.712  , 0.163  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.118  , 0.722  , 0.161  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0. , 0.  , 0. ],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.114  , 0.727  , 0.165  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.111  , 0.730  , 0.177  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.104  , 0.727  , 0.178  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.095  , 0.727  , 0.178  , 0.  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.094  , 0.727  , 0.178  , 0.  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.094  , 0.727  , 0.178  , 0.  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.094  , 0.727  , 0.178  , 0.  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.094  , 0.727  , 0.178  , 0.],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.094  , 0.727  , 0.178],
                   [0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.  , 0.094  , 0.727]])

rev_matrix = matrix[::-1]

np.set_printoptions(edgeitems=25, linewidth=200)  # Adjust edgeitems and linewidth as needed
print("Original Matrix:")
print(rev_matrix)
    
import ROOT as ROOT
import array as array

bins = [18.05, 18.15, 18.25, 18.35, 18.45, 18.55, 18.65, 18.75, 18.85, 18.95, 
        19.05, 19.15, 19.25, 19.35, 19.45, 19.55, 19.65, 19.75, 19.85, 19.95, 
        20.05, 20.15, 20.25, 20.35, 20.45]
n_bins = len(bins) - 1 


r_matrix = ROOT.TH2D("astro_matrix", "astro_matrix", n_bins, array.array('d', bins), n_bins, array.array('d', bins))

for i in range(len(matrix[0])):
    for j in range(len(matrix[1])):    
        r_matrix.SetBinContent(i+1,j+1,matrix[j][i])

bins = [18.45, 18.55, 18.65, 18.75, 18.85, 18.95, 
        19.05, 19.15, 19.25, 19.35, 19.45, 19.55, 19.65, 19.75, 19.85, 19.95, 
        20.05, 20.15, 20.25, 20.35]
n_bins = len(bins) - 1 

r_matrix_short = ROOT.TH2D("astro_matrix_short", "astro_matrix_short", n_bins, array.array('d', bins), n_bins, array.array('d', bins))

for i in range(len(matrix[0])-6):
    for j in range(len(matrix[1])-6):    
        r_matrix_short.SetBinContent(i+1,j+1,matrix[j+4][i+4])

r_N      = ROOT.TH1D("N", "N", n_bins,  array.array('d', bins))
r_Ncorr  = ROOT.TH1D("Ncorr", "Ncorr", n_bins,  array.array('d', bins))

N=[83143 ,47500 ,28657 ,17843 ,12435 ,8715  ,6050  ,4111  ,2620  ,1691  ,991   ,624   ,372   ,156   ,83    ,24    ,9     ,6     ,0     ,0     ]
Ncorr=[76176 ,44904,26843 ,16970 ,12109 ,8515  ,5939  ,4048  ,2567   ,1664   ,979     ,619     ,373     ,152     ,80       ,23       ,9         ,6         ,0         ,0         ]

for i in range(len(matrix[0])-6):
    r_N.SetBinContent(i+1, N[i])
    r_Ncorr.SetBinContent(i+1, Ncorr[i])

rfile = ROOT.TFile("astro.root", "recreate")
rfile.cd()
r_matrix.Write()
r_matrix_short.Write()
r_N.Write()
r_Ncorr.Write()

print('Done creating the ROOT file!')
